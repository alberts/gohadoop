// Code generated by protoc-gen-go.
// source: DatanodeProtocol.proto
// DO NOT EDIT!

/*
Package hadoop_hdfs_datanode is a generated protocol buffer package.

It is generated from these files:
	DatanodeProtocol.proto

It has these top-level messages:
	DatanodeRegistrationProto
	DatanodeStorageProto
	DatanodeCommandProto
	BalancerBandwidthCommandProto
	BlockCommandProto
	BlockIdCommandProto
	BlockRecoveryCommandProto
	FinalizeCommandProto
	KeyUpdateCommandProto
	RegisterCommandProto
	RegisterDatanodeRequestProto
	RegisterDatanodeResponseProto
	HeartbeatRequestProto
	StorageReportProto
	NNHAStatusHeartbeatProto
	HeartbeatResponseProto
	BlockReportRequestProto
	StorageBlockReportProto
	BlockReportResponseProto
	CacheReportRequestProto
	CacheReportResponseProto
	ReceivedDeletedBlockInfoProto
	StorageReceivedDeletedBlocksProto
	BlockReceivedAndDeletedRequestProto
	BlockReceivedAndDeletedResponseProto
	ErrorReportRequestProto
	ErrorReportResponseProto
	ReportBadBlocksRequestProto
	ReportBadBlocksResponseProto
	CommitBlockSynchronizationRequestProto
	CommitBlockSynchronizationResponseProto
*/
package hadoop_hdfs_datanode

import proto "code.google.com/p/goprotobuf/proto"
import math "math"
import hadoop_hdfs "github.com/hortonworks/gohadoop/hdfs"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type DatanodeStorageProto_StorageState int32

const (
	DatanodeStorageProto_NORMAL           DatanodeStorageProto_StorageState = 0
	DatanodeStorageProto_READ_ONLY_SHARED DatanodeStorageProto_StorageState = 1
)

var DatanodeStorageProto_StorageState_name = map[int32]string{
	0: "NORMAL",
	1: "READ_ONLY_SHARED",
}
var DatanodeStorageProto_StorageState_value = map[string]int32{
	"NORMAL":           0,
	"READ_ONLY_SHARED": 1,
}

func (x DatanodeStorageProto_StorageState) Enum() *DatanodeStorageProto_StorageState {
	p := new(DatanodeStorageProto_StorageState)
	*p = x
	return p
}
func (x DatanodeStorageProto_StorageState) String() string {
	return proto.EnumName(DatanodeStorageProto_StorageState_name, int32(x))
}
func (x *DatanodeStorageProto_StorageState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatanodeStorageProto_StorageState_value, data, "DatanodeStorageProto_StorageState")
	if err != nil {
		return err
	}
	*x = DatanodeStorageProto_StorageState(value)
	return nil
}

type DatanodeCommandProto_Type int32

const (
	DatanodeCommandProto_BalancerBandwidthCommand DatanodeCommandProto_Type = 0
	DatanodeCommandProto_BlockCommand             DatanodeCommandProto_Type = 1
	DatanodeCommandProto_BlockRecoveryCommand     DatanodeCommandProto_Type = 2
	DatanodeCommandProto_FinalizeCommand          DatanodeCommandProto_Type = 3
	DatanodeCommandProto_KeyUpdateCommand         DatanodeCommandProto_Type = 4
	DatanodeCommandProto_RegisterCommand          DatanodeCommandProto_Type = 5
	DatanodeCommandProto_UnusedUpgradeCommand     DatanodeCommandProto_Type = 6
	DatanodeCommandProto_NullDatanodeCommand      DatanodeCommandProto_Type = 7
	DatanodeCommandProto_BlockIdCommand           DatanodeCommandProto_Type = 8
)

var DatanodeCommandProto_Type_name = map[int32]string{
	0: "BalancerBandwidthCommand",
	1: "BlockCommand",
	2: "BlockRecoveryCommand",
	3: "FinalizeCommand",
	4: "KeyUpdateCommand",
	5: "RegisterCommand",
	6: "UnusedUpgradeCommand",
	7: "NullDatanodeCommand",
	8: "BlockIdCommand",
}
var DatanodeCommandProto_Type_value = map[string]int32{
	"BalancerBandwidthCommand": 0,
	"BlockCommand":             1,
	"BlockRecoveryCommand":     2,
	"FinalizeCommand":          3,
	"KeyUpdateCommand":         4,
	"RegisterCommand":          5,
	"UnusedUpgradeCommand":     6,
	"NullDatanodeCommand":      7,
	"BlockIdCommand":           8,
}

func (x DatanodeCommandProto_Type) Enum() *DatanodeCommandProto_Type {
	p := new(DatanodeCommandProto_Type)
	*p = x
	return p
}
func (x DatanodeCommandProto_Type) String() string {
	return proto.EnumName(DatanodeCommandProto_Type_name, int32(x))
}
func (x *DatanodeCommandProto_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatanodeCommandProto_Type_value, data, "DatanodeCommandProto_Type")
	if err != nil {
		return err
	}
	*x = DatanodeCommandProto_Type(value)
	return nil
}

type BlockCommandProto_Action int32

const (
	BlockCommandProto_TRANSFER   BlockCommandProto_Action = 1
	BlockCommandProto_INVALIDATE BlockCommandProto_Action = 2
	BlockCommandProto_SHUTDOWN   BlockCommandProto_Action = 3
)

var BlockCommandProto_Action_name = map[int32]string{
	1: "TRANSFER",
	2: "INVALIDATE",
	3: "SHUTDOWN",
}
var BlockCommandProto_Action_value = map[string]int32{
	"TRANSFER":   1,
	"INVALIDATE": 2,
	"SHUTDOWN":   3,
}

func (x BlockCommandProto_Action) Enum() *BlockCommandProto_Action {
	p := new(BlockCommandProto_Action)
	*p = x
	return p
}
func (x BlockCommandProto_Action) String() string {
	return proto.EnumName(BlockCommandProto_Action_name, int32(x))
}
func (x *BlockCommandProto_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BlockCommandProto_Action_value, data, "BlockCommandProto_Action")
	if err != nil {
		return err
	}
	*x = BlockCommandProto_Action(value)
	return nil
}

type BlockIdCommandProto_Action int32

const (
	BlockIdCommandProto_CACHE   BlockIdCommandProto_Action = 1
	BlockIdCommandProto_UNCACHE BlockIdCommandProto_Action = 2
)

var BlockIdCommandProto_Action_name = map[int32]string{
	1: "CACHE",
	2: "UNCACHE",
}
var BlockIdCommandProto_Action_value = map[string]int32{
	"CACHE":   1,
	"UNCACHE": 2,
}

func (x BlockIdCommandProto_Action) Enum() *BlockIdCommandProto_Action {
	p := new(BlockIdCommandProto_Action)
	*p = x
	return p
}
func (x BlockIdCommandProto_Action) String() string {
	return proto.EnumName(BlockIdCommandProto_Action_name, int32(x))
}
func (x *BlockIdCommandProto_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BlockIdCommandProto_Action_value, data, "BlockIdCommandProto_Action")
	if err != nil {
		return err
	}
	*x = BlockIdCommandProto_Action(value)
	return nil
}

type NNHAStatusHeartbeatProto_State int32

const (
	NNHAStatusHeartbeatProto_ACTIVE  NNHAStatusHeartbeatProto_State = 0
	NNHAStatusHeartbeatProto_STANDBY NNHAStatusHeartbeatProto_State = 1
)

var NNHAStatusHeartbeatProto_State_name = map[int32]string{
	0: "ACTIVE",
	1: "STANDBY",
}
var NNHAStatusHeartbeatProto_State_value = map[string]int32{
	"ACTIVE":  0,
	"STANDBY": 1,
}

func (x NNHAStatusHeartbeatProto_State) Enum() *NNHAStatusHeartbeatProto_State {
	p := new(NNHAStatusHeartbeatProto_State)
	*p = x
	return p
}
func (x NNHAStatusHeartbeatProto_State) String() string {
	return proto.EnumName(NNHAStatusHeartbeatProto_State_name, int32(x))
}
func (x *NNHAStatusHeartbeatProto_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NNHAStatusHeartbeatProto_State_value, data, "NNHAStatusHeartbeatProto_State")
	if err != nil {
		return err
	}
	*x = NNHAStatusHeartbeatProto_State(value)
	return nil
}

type ReceivedDeletedBlockInfoProto_BlockStatus int32

const (
	ReceivedDeletedBlockInfoProto_RECEIVING ReceivedDeletedBlockInfoProto_BlockStatus = 1
	ReceivedDeletedBlockInfoProto_RECEIVED  ReceivedDeletedBlockInfoProto_BlockStatus = 2
	ReceivedDeletedBlockInfoProto_DELETED   ReceivedDeletedBlockInfoProto_BlockStatus = 3
)

var ReceivedDeletedBlockInfoProto_BlockStatus_name = map[int32]string{
	1: "RECEIVING",
	2: "RECEIVED",
	3: "DELETED",
}
var ReceivedDeletedBlockInfoProto_BlockStatus_value = map[string]int32{
	"RECEIVING": 1,
	"RECEIVED":  2,
	"DELETED":   3,
}

func (x ReceivedDeletedBlockInfoProto_BlockStatus) Enum() *ReceivedDeletedBlockInfoProto_BlockStatus {
	p := new(ReceivedDeletedBlockInfoProto_BlockStatus)
	*p = x
	return p
}
func (x ReceivedDeletedBlockInfoProto_BlockStatus) String() string {
	return proto.EnumName(ReceivedDeletedBlockInfoProto_BlockStatus_name, int32(x))
}
func (x *ReceivedDeletedBlockInfoProto_BlockStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReceivedDeletedBlockInfoProto_BlockStatus_value, data, "ReceivedDeletedBlockInfoProto_BlockStatus")
	if err != nil {
		return err
	}
	*x = ReceivedDeletedBlockInfoProto_BlockStatus(value)
	return nil
}

type ErrorReportRequestProto_ErrorCode int32

const (
	ErrorReportRequestProto_NOTIFY           ErrorReportRequestProto_ErrorCode = 0
	ErrorReportRequestProto_DISK_ERROR       ErrorReportRequestProto_ErrorCode = 1
	ErrorReportRequestProto_INVALID_BLOCK    ErrorReportRequestProto_ErrorCode = 2
	ErrorReportRequestProto_FATAL_DISK_ERROR ErrorReportRequestProto_ErrorCode = 3
)

var ErrorReportRequestProto_ErrorCode_name = map[int32]string{
	0: "NOTIFY",
	1: "DISK_ERROR",
	2: "INVALID_BLOCK",
	3: "FATAL_DISK_ERROR",
}
var ErrorReportRequestProto_ErrorCode_value = map[string]int32{
	"NOTIFY":           0,
	"DISK_ERROR":       1,
	"INVALID_BLOCK":    2,
	"FATAL_DISK_ERROR": 3,
}

func (x ErrorReportRequestProto_ErrorCode) Enum() *ErrorReportRequestProto_ErrorCode {
	p := new(ErrorReportRequestProto_ErrorCode)
	*p = x
	return p
}
func (x ErrorReportRequestProto_ErrorCode) String() string {
	return proto.EnumName(ErrorReportRequestProto_ErrorCode_name, int32(x))
}
func (x *ErrorReportRequestProto_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorReportRequestProto_ErrorCode_value, data, "ErrorReportRequestProto_ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorReportRequestProto_ErrorCode(value)
	return nil
}

// *
// Information to identify a datanode to a namenode
type DatanodeRegistrationProto struct {
	DatanodeID       *hadoop_hdfs.DatanodeIDProto        `protobuf:"bytes,1,req,name=datanodeID" json:"datanodeID,omitempty"`
	StorageInfo      *hadoop_hdfs.StorageInfoProto       `protobuf:"bytes,2,req,name=storageInfo" json:"storageInfo,omitempty"`
	Keys             *hadoop_hdfs.ExportedBlockKeysProto `protobuf:"bytes,3,req,name=keys" json:"keys,omitempty"`
	SoftwareVersion  *string                             `protobuf:"bytes,4,req,name=softwareVersion" json:"softwareVersion,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *DatanodeRegistrationProto) Reset()         { *m = DatanodeRegistrationProto{} }
func (m *DatanodeRegistrationProto) String() string { return proto.CompactTextString(m) }
func (*DatanodeRegistrationProto) ProtoMessage()    {}

func (m *DatanodeRegistrationProto) GetDatanodeID() *hadoop_hdfs.DatanodeIDProto {
	if m != nil {
		return m.DatanodeID
	}
	return nil
}

func (m *DatanodeRegistrationProto) GetStorageInfo() *hadoop_hdfs.StorageInfoProto {
	if m != nil {
		return m.StorageInfo
	}
	return nil
}

func (m *DatanodeRegistrationProto) GetKeys() *hadoop_hdfs.ExportedBlockKeysProto {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *DatanodeRegistrationProto) GetSoftwareVersion() string {
	if m != nil && m.SoftwareVersion != nil {
		return *m.SoftwareVersion
	}
	return ""
}

// *
// Represents a storage available on the datanode
type DatanodeStorageProto struct {
	StorageUuid      *string                            `protobuf:"bytes,1,req,name=storageUuid" json:"storageUuid,omitempty"`
	State            *DatanodeStorageProto_StorageState `protobuf:"varint,2,opt,name=state,enum=hadoop.hdfs.datanode.DatanodeStorageProto_StorageState,def=0" json:"state,omitempty"`
	StorageType      *hadoop_hdfs.StorageTypeProto      `protobuf:"varint,3,opt,name=storageType,enum=hadoop.hdfs.StorageTypeProto,def=1" json:"storageType,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *DatanodeStorageProto) Reset()         { *m = DatanodeStorageProto{} }
func (m *DatanodeStorageProto) String() string { return proto.CompactTextString(m) }
func (*DatanodeStorageProto) ProtoMessage()    {}

const Default_DatanodeStorageProto_State DatanodeStorageProto_StorageState = DatanodeStorageProto_NORMAL
const Default_DatanodeStorageProto_StorageType hadoop_hdfs.StorageTypeProto = hadoop_hdfs.StorageTypeProto_DISK

func (m *DatanodeStorageProto) GetStorageUuid() string {
	if m != nil && m.StorageUuid != nil {
		return *m.StorageUuid
	}
	return ""
}

func (m *DatanodeStorageProto) GetState() DatanodeStorageProto_StorageState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_DatanodeStorageProto_State
}

func (m *DatanodeStorageProto) GetStorageType() hadoop_hdfs.StorageTypeProto {
	if m != nil && m.StorageType != nil {
		return *m.StorageType
	}
	return Default_DatanodeStorageProto_StorageType
}

// *
// Commands sent from namenode to the datanodes
type DatanodeCommandProto struct {
	CmdType *DatanodeCommandProto_Type `protobuf:"varint,1,req,name=cmdType,enum=hadoop.hdfs.datanode.DatanodeCommandProto_Type" json:"cmdType,omitempty"`
	// One of the following command is available when the corresponding
	// cmdType is set
	BalancerCmd      *BalancerBandwidthCommandProto `protobuf:"bytes,2,opt,name=balancerCmd" json:"balancerCmd,omitempty"`
	BlkCmd           *BlockCommandProto             `protobuf:"bytes,3,opt,name=blkCmd" json:"blkCmd,omitempty"`
	RecoveryCmd      *BlockRecoveryCommandProto     `protobuf:"bytes,4,opt,name=recoveryCmd" json:"recoveryCmd,omitempty"`
	FinalizeCmd      *FinalizeCommandProto          `protobuf:"bytes,5,opt,name=finalizeCmd" json:"finalizeCmd,omitempty"`
	KeyUpdateCmd     *KeyUpdateCommandProto         `protobuf:"bytes,6,opt,name=keyUpdateCmd" json:"keyUpdateCmd,omitempty"`
	RegisterCmd      *RegisterCommandProto          `protobuf:"bytes,7,opt,name=registerCmd" json:"registerCmd,omitempty"`
	BlkIdCmd         *BlockIdCommandProto           `protobuf:"bytes,8,opt,name=blkIdCmd" json:"blkIdCmd,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *DatanodeCommandProto) Reset()         { *m = DatanodeCommandProto{} }
func (m *DatanodeCommandProto) String() string { return proto.CompactTextString(m) }
func (*DatanodeCommandProto) ProtoMessage()    {}

func (m *DatanodeCommandProto) GetCmdType() DatanodeCommandProto_Type {
	if m != nil && m.CmdType != nil {
		return *m.CmdType
	}
	return DatanodeCommandProto_BalancerBandwidthCommand
}

func (m *DatanodeCommandProto) GetBalancerCmd() *BalancerBandwidthCommandProto {
	if m != nil {
		return m.BalancerCmd
	}
	return nil
}

func (m *DatanodeCommandProto) GetBlkCmd() *BlockCommandProto {
	if m != nil {
		return m.BlkCmd
	}
	return nil
}

func (m *DatanodeCommandProto) GetRecoveryCmd() *BlockRecoveryCommandProto {
	if m != nil {
		return m.RecoveryCmd
	}
	return nil
}

func (m *DatanodeCommandProto) GetFinalizeCmd() *FinalizeCommandProto {
	if m != nil {
		return m.FinalizeCmd
	}
	return nil
}

func (m *DatanodeCommandProto) GetKeyUpdateCmd() *KeyUpdateCommandProto {
	if m != nil {
		return m.KeyUpdateCmd
	}
	return nil
}

func (m *DatanodeCommandProto) GetRegisterCmd() *RegisterCommandProto {
	if m != nil {
		return m.RegisterCmd
	}
	return nil
}

func (m *DatanodeCommandProto) GetBlkIdCmd() *BlockIdCommandProto {
	if m != nil {
		return m.BlkIdCmd
	}
	return nil
}

// *
// Command sent from namenode to datanode to set the
// maximum bandwidth to be used for balancing.
type BalancerBandwidthCommandProto struct {
	// Maximum bandwidth to be used by datanode for balancing
	Bandwidth        *uint64 `protobuf:"varint,1,req,name=bandwidth" json:"bandwidth,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BalancerBandwidthCommandProto) Reset()         { *m = BalancerBandwidthCommandProto{} }
func (m *BalancerBandwidthCommandProto) String() string { return proto.CompactTextString(m) }
func (*BalancerBandwidthCommandProto) ProtoMessage()    {}

func (m *BalancerBandwidthCommandProto) GetBandwidth() uint64 {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return 0
}

// *
// Command to instruct datanodes to perform certain action
// on the given set of blocks.
type BlockCommandProto struct {
	Action             *BlockCommandProto_Action         `protobuf:"varint,1,req,name=action,enum=hadoop.hdfs.datanode.BlockCommandProto_Action" json:"action,omitempty"`
	BlockPoolId        *string                           `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Blocks             []*hadoop_hdfs.BlockProto         `protobuf:"bytes,3,rep,name=blocks" json:"blocks,omitempty"`
	Targets            []*hadoop_hdfs.DatanodeInfosProto `protobuf:"bytes,4,rep,name=targets" json:"targets,omitempty"`
	TargetStorageUuids []*hadoop_hdfs.StorageUuidsProto  `protobuf:"bytes,5,rep,name=targetStorageUuids" json:"targetStorageUuids,omitempty"`
	XXX_unrecognized   []byte                            `json:"-"`
}

func (m *BlockCommandProto) Reset()         { *m = BlockCommandProto{} }
func (m *BlockCommandProto) String() string { return proto.CompactTextString(m) }
func (*BlockCommandProto) ProtoMessage()    {}

func (m *BlockCommandProto) GetAction() BlockCommandProto_Action {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return BlockCommandProto_TRANSFER
}

func (m *BlockCommandProto) GetBlockPoolId() string {
	if m != nil && m.BlockPoolId != nil {
		return *m.BlockPoolId
	}
	return ""
}

func (m *BlockCommandProto) GetBlocks() []*hadoop_hdfs.BlockProto {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *BlockCommandProto) GetTargets() []*hadoop_hdfs.DatanodeInfosProto {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *BlockCommandProto) GetTargetStorageUuids() []*hadoop_hdfs.StorageUuidsProto {
	if m != nil {
		return m.TargetStorageUuids
	}
	return nil
}

// *
// Command to instruct datanodes to perform certain action
// on the given set of block IDs.
type BlockIdCommandProto struct {
	Action           *BlockIdCommandProto_Action `protobuf:"varint,1,req,name=action,enum=hadoop.hdfs.datanode.BlockIdCommandProto_Action" json:"action,omitempty"`
	BlockPoolId      *string                     `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	BlockIds         []uint64                    `protobuf:"varint,3,rep,packed,name=blockIds" json:"blockIds,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *BlockIdCommandProto) Reset()         { *m = BlockIdCommandProto{} }
func (m *BlockIdCommandProto) String() string { return proto.CompactTextString(m) }
func (*BlockIdCommandProto) ProtoMessage()    {}

func (m *BlockIdCommandProto) GetAction() BlockIdCommandProto_Action {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return BlockIdCommandProto_CACHE
}

func (m *BlockIdCommandProto) GetBlockPoolId() string {
	if m != nil && m.BlockPoolId != nil {
		return *m.BlockPoolId
	}
	return ""
}

func (m *BlockIdCommandProto) GetBlockIds() []uint64 {
	if m != nil {
		return m.BlockIds
	}
	return nil
}

// *
// List of blocks to be recovered by the datanode
type BlockRecoveryCommandProto struct {
	Blocks           []*hadoop_hdfs.RecoveringBlockProto `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *BlockRecoveryCommandProto) Reset()         { *m = BlockRecoveryCommandProto{} }
func (m *BlockRecoveryCommandProto) String() string { return proto.CompactTextString(m) }
func (*BlockRecoveryCommandProto) ProtoMessage()    {}

func (m *BlockRecoveryCommandProto) GetBlocks() []*hadoop_hdfs.RecoveringBlockProto {
	if m != nil {
		return m.Blocks
	}
	return nil
}

// *
// Finalize the upgrade at the datanode
type FinalizeCommandProto struct {
	BlockPoolId      *string `protobuf:"bytes,1,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FinalizeCommandProto) Reset()         { *m = FinalizeCommandProto{} }
func (m *FinalizeCommandProto) String() string { return proto.CompactTextString(m) }
func (*FinalizeCommandProto) ProtoMessage()    {}

func (m *FinalizeCommandProto) GetBlockPoolId() string {
	if m != nil && m.BlockPoolId != nil {
		return *m.BlockPoolId
	}
	return ""
}

// *
// Update the block keys at the datanode
type KeyUpdateCommandProto struct {
	Keys             *hadoop_hdfs.ExportedBlockKeysProto `protobuf:"bytes,1,req,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *KeyUpdateCommandProto) Reset()         { *m = KeyUpdateCommandProto{} }
func (m *KeyUpdateCommandProto) String() string { return proto.CompactTextString(m) }
func (*KeyUpdateCommandProto) ProtoMessage()    {}

func (m *KeyUpdateCommandProto) GetKeys() *hadoop_hdfs.ExportedBlockKeysProto {
	if m != nil {
		return m.Keys
	}
	return nil
}

// *
// Instruct datanode to register with the namenode
type RegisterCommandProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegisterCommandProto) Reset()         { *m = RegisterCommandProto{} }
func (m *RegisterCommandProto) String() string { return proto.CompactTextString(m) }
func (*RegisterCommandProto) ProtoMessage()    {}

// *
// registration - Information of the datanode registering with the namenode
type RegisterDatanodeRequestProto struct {
	Registration     *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *RegisterDatanodeRequestProto) Reset()         { *m = RegisterDatanodeRequestProto{} }
func (m *RegisterDatanodeRequestProto) String() string { return proto.CompactTextString(m) }
func (*RegisterDatanodeRequestProto) ProtoMessage()    {}

func (m *RegisterDatanodeRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registration
	}
	return nil
}

// *
// registration - Update registration of the datanode that successfully
//                registered. StorageInfo will be updated to include new
//                storage ID if the datanode did not have one in the request.
type RegisterDatanodeResponseProto struct {
	Registration     *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *RegisterDatanodeResponseProto) Reset()         { *m = RegisterDatanodeResponseProto{} }
func (m *RegisterDatanodeResponseProto) String() string { return proto.CompactTextString(m) }
func (*RegisterDatanodeResponseProto) ProtoMessage()    {}

func (m *RegisterDatanodeResponseProto) GetRegistration() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registration
	}
	return nil
}

// *
// registration - datanode registration information
// capacity - total storage capacity available at the datanode
// dfsUsed - storage used by HDFS
// remaining - remaining storage available for HDFS
// blockPoolUsed - storage used by the block pool
// xmitsInProgress - number of transfers from this datanode to others
// xceiverCount - number of active transceiver threads
// failedVolumes - number of failed volumes
// cacheCapacity - total cache capacity available at the datanode
// cacheUsed - amount of cache used
type HeartbeatRequestProto struct {
	Registration     *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	Reports          []*StorageReportProto      `protobuf:"bytes,2,rep,name=reports" json:"reports,omitempty"`
	XmitsInProgress  *uint32                    `protobuf:"varint,3,opt,name=xmitsInProgress,def=0" json:"xmitsInProgress,omitempty"`
	XceiverCount     *uint32                    `protobuf:"varint,4,opt,name=xceiverCount,def=0" json:"xceiverCount,omitempty"`
	FailedVolumes    *uint32                    `protobuf:"varint,5,opt,name=failedVolumes,def=0" json:"failedVolumes,omitempty"`
	CacheCapacity    *uint64                    `protobuf:"varint,6,opt,name=cacheCapacity,def=0" json:"cacheCapacity,omitempty"`
	CacheUsed        *uint64                    `protobuf:"varint,7,opt,name=cacheUsed,def=0" json:"cacheUsed,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *HeartbeatRequestProto) Reset()         { *m = HeartbeatRequestProto{} }
func (m *HeartbeatRequestProto) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequestProto) ProtoMessage()    {}

const Default_HeartbeatRequestProto_XmitsInProgress uint32 = 0
const Default_HeartbeatRequestProto_XceiverCount uint32 = 0
const Default_HeartbeatRequestProto_FailedVolumes uint32 = 0
const Default_HeartbeatRequestProto_CacheCapacity uint64 = 0
const Default_HeartbeatRequestProto_CacheUsed uint64 = 0

func (m *HeartbeatRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registration
	}
	return nil
}

func (m *HeartbeatRequestProto) GetReports() []*StorageReportProto {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *HeartbeatRequestProto) GetXmitsInProgress() uint32 {
	if m != nil && m.XmitsInProgress != nil {
		return *m.XmitsInProgress
	}
	return Default_HeartbeatRequestProto_XmitsInProgress
}

func (m *HeartbeatRequestProto) GetXceiverCount() uint32 {
	if m != nil && m.XceiverCount != nil {
		return *m.XceiverCount
	}
	return Default_HeartbeatRequestProto_XceiverCount
}

func (m *HeartbeatRequestProto) GetFailedVolumes() uint32 {
	if m != nil && m.FailedVolumes != nil {
		return *m.FailedVolumes
	}
	return Default_HeartbeatRequestProto_FailedVolumes
}

func (m *HeartbeatRequestProto) GetCacheCapacity() uint64 {
	if m != nil && m.CacheCapacity != nil {
		return *m.CacheCapacity
	}
	return Default_HeartbeatRequestProto_CacheCapacity
}

func (m *HeartbeatRequestProto) GetCacheUsed() uint64 {
	if m != nil && m.CacheUsed != nil {
		return *m.CacheUsed
	}
	return Default_HeartbeatRequestProto_CacheUsed
}

type StorageReportProto struct {
	StorageUuid      *string               `protobuf:"bytes,1,req,name=storageUuid" json:"storageUuid,omitempty"`
	Failed           *bool                 `protobuf:"varint,2,opt,name=failed,def=0" json:"failed,omitempty"`
	Capacity         *uint64               `protobuf:"varint,3,opt,name=capacity,def=0" json:"capacity,omitempty"`
	DfsUsed          *uint64               `protobuf:"varint,4,opt,name=dfsUsed,def=0" json:"dfsUsed,omitempty"`
	Remaining        *uint64               `protobuf:"varint,5,opt,name=remaining,def=0" json:"remaining,omitempty"`
	BlockPoolUsed    *uint64               `protobuf:"varint,6,opt,name=blockPoolUsed,def=0" json:"blockPoolUsed,omitempty"`
	Storage          *DatanodeStorageProto `protobuf:"bytes,7,opt,name=storage" json:"storage,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StorageReportProto) Reset()         { *m = StorageReportProto{} }
func (m *StorageReportProto) String() string { return proto.CompactTextString(m) }
func (*StorageReportProto) ProtoMessage()    {}

const Default_StorageReportProto_Failed bool = false
const Default_StorageReportProto_Capacity uint64 = 0
const Default_StorageReportProto_DfsUsed uint64 = 0
const Default_StorageReportProto_Remaining uint64 = 0
const Default_StorageReportProto_BlockPoolUsed uint64 = 0

func (m *StorageReportProto) GetStorageUuid() string {
	if m != nil && m.StorageUuid != nil {
		return *m.StorageUuid
	}
	return ""
}

func (m *StorageReportProto) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return Default_StorageReportProto_Failed
}

func (m *StorageReportProto) GetCapacity() uint64 {
	if m != nil && m.Capacity != nil {
		return *m.Capacity
	}
	return Default_StorageReportProto_Capacity
}

func (m *StorageReportProto) GetDfsUsed() uint64 {
	if m != nil && m.DfsUsed != nil {
		return *m.DfsUsed
	}
	return Default_StorageReportProto_DfsUsed
}

func (m *StorageReportProto) GetRemaining() uint64 {
	if m != nil && m.Remaining != nil {
		return *m.Remaining
	}
	return Default_StorageReportProto_Remaining
}

func (m *StorageReportProto) GetBlockPoolUsed() uint64 {
	if m != nil && m.BlockPoolUsed != nil {
		return *m.BlockPoolUsed
	}
	return Default_StorageReportProto_BlockPoolUsed
}

func (m *StorageReportProto) GetStorage() *DatanodeStorageProto {
	if m != nil {
		return m.Storage
	}
	return nil
}

// *
// state - State the NN is in when returning response to the DN
// txid - Highest transaction ID this NN has seen
type NNHAStatusHeartbeatProto struct {
	State            *NNHAStatusHeartbeatProto_State `protobuf:"varint,1,req,name=state,enum=hadoop.hdfs.datanode.NNHAStatusHeartbeatProto_State" json:"state,omitempty"`
	Txid             *uint64                         `protobuf:"varint,2,req,name=txid" json:"txid,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *NNHAStatusHeartbeatProto) Reset()         { *m = NNHAStatusHeartbeatProto{} }
func (m *NNHAStatusHeartbeatProto) String() string { return proto.CompactTextString(m) }
func (*NNHAStatusHeartbeatProto) ProtoMessage()    {}

func (m *NNHAStatusHeartbeatProto) GetState() NNHAStatusHeartbeatProto_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return NNHAStatusHeartbeatProto_ACTIVE
}

func (m *NNHAStatusHeartbeatProto) GetTxid() uint64 {
	if m != nil && m.Txid != nil {
		return *m.Txid
	}
	return 0
}

// *
// cmds - Commands from namenode to datanode.
// haStatus - Status (from an HA perspective) of the NN sending this response
type HeartbeatResponseProto struct {
	Cmds                 []*DatanodeCommandProto                `protobuf:"bytes,1,rep,name=cmds" json:"cmds,omitempty"`
	HaStatus             *NNHAStatusHeartbeatProto              `protobuf:"bytes,2,req,name=haStatus" json:"haStatus,omitempty"`
	RollingUpgradeStatus *hadoop_hdfs.RollingUpgradeStatusProto `protobuf:"bytes,3,opt,name=rollingUpgradeStatus" json:"rollingUpgradeStatus,omitempty"`
	XXX_unrecognized     []byte                                 `json:"-"`
}

func (m *HeartbeatResponseProto) Reset()         { *m = HeartbeatResponseProto{} }
func (m *HeartbeatResponseProto) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponseProto) ProtoMessage()    {}

func (m *HeartbeatResponseProto) GetCmds() []*DatanodeCommandProto {
	if m != nil {
		return m.Cmds
	}
	return nil
}

func (m *HeartbeatResponseProto) GetHaStatus() *NNHAStatusHeartbeatProto {
	if m != nil {
		return m.HaStatus
	}
	return nil
}

func (m *HeartbeatResponseProto) GetRollingUpgradeStatus() *hadoop_hdfs.RollingUpgradeStatusProto {
	if m != nil {
		return m.RollingUpgradeStatus
	}
	return nil
}

// *
// registration - datanode registration information
// blockPoolID  - block pool ID of the reported blocks
// blocks       - each block is represented as multiple longs in the array.
//                first long represents block ID
//                second long represents length
//                third long represents gen stamp
//                fourth long (if under construction) represents replica state
type BlockReportRequestProto struct {
	Registration     *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	BlockPoolId      *string                    `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Reports          []*StorageBlockReportProto `protobuf:"bytes,3,rep,name=reports" json:"reports,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *BlockReportRequestProto) Reset()         { *m = BlockReportRequestProto{} }
func (m *BlockReportRequestProto) String() string { return proto.CompactTextString(m) }
func (*BlockReportRequestProto) ProtoMessage()    {}

func (m *BlockReportRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registration
	}
	return nil
}

func (m *BlockReportRequestProto) GetBlockPoolId() string {
	if m != nil && m.BlockPoolId != nil {
		return *m.BlockPoolId
	}
	return ""
}

func (m *BlockReportRequestProto) GetReports() []*StorageBlockReportProto {
	if m != nil {
		return m.Reports
	}
	return nil
}

// *
// Report of blocks in a storage
type StorageBlockReportProto struct {
	Storage          *DatanodeStorageProto `protobuf:"bytes,1,req,name=storage" json:"storage,omitempty"`
	Blocks           []uint64              `protobuf:"varint,2,rep,packed,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StorageBlockReportProto) Reset()         { *m = StorageBlockReportProto{} }
func (m *StorageBlockReportProto) String() string { return proto.CompactTextString(m) }
func (*StorageBlockReportProto) ProtoMessage()    {}

func (m *StorageBlockReportProto) GetStorage() *DatanodeStorageProto {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *StorageBlockReportProto) GetBlocks() []uint64 {
	if m != nil {
		return m.Blocks
	}
	return nil
}

// *
// cmd - Command from namenode to the datanode
type BlockReportResponseProto struct {
	Cmd              *DatanodeCommandProto `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *BlockReportResponseProto) Reset()         { *m = BlockReportResponseProto{} }
func (m *BlockReportResponseProto) String() string { return proto.CompactTextString(m) }
func (*BlockReportResponseProto) ProtoMessage()    {}

func (m *BlockReportResponseProto) GetCmd() *DatanodeCommandProto {
	if m != nil {
		return m.Cmd
	}
	return nil
}

// *
// registration - datanode registration information
// blockPoolId  - block pool ID of the reported blocks
// blocks       - representation of blocks as longs for efficiency reasons
type CacheReportRequestProto struct {
	Registration     *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	BlockPoolId      *string                    `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Blocks           []uint64                   `protobuf:"varint,3,rep,packed,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CacheReportRequestProto) Reset()         { *m = CacheReportRequestProto{} }
func (m *CacheReportRequestProto) String() string { return proto.CompactTextString(m) }
func (*CacheReportRequestProto) ProtoMessage()    {}

func (m *CacheReportRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registration
	}
	return nil
}

func (m *CacheReportRequestProto) GetBlockPoolId() string {
	if m != nil && m.BlockPoolId != nil {
		return *m.BlockPoolId
	}
	return ""
}

func (m *CacheReportRequestProto) GetBlocks() []uint64 {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type CacheReportResponseProto struct {
	Cmd              *DatanodeCommandProto `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CacheReportResponseProto) Reset()         { *m = CacheReportResponseProto{} }
func (m *CacheReportResponseProto) String() string { return proto.CompactTextString(m) }
func (*CacheReportResponseProto) ProtoMessage()    {}

func (m *CacheReportResponseProto) GetCmd() *DatanodeCommandProto {
	if m != nil {
		return m.Cmd
	}
	return nil
}

// *
// Data structure to send received or deleted block information
// from datanode to namenode.
type ReceivedDeletedBlockInfoProto struct {
	Block            *hadoop_hdfs.BlockProto                    `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	Status           *ReceivedDeletedBlockInfoProto_BlockStatus `protobuf:"varint,3,req,name=status,enum=hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto_BlockStatus" json:"status,omitempty"`
	DeleteHint       *string                                    `protobuf:"bytes,2,opt,name=deleteHint" json:"deleteHint,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *ReceivedDeletedBlockInfoProto) Reset()         { *m = ReceivedDeletedBlockInfoProto{} }
func (m *ReceivedDeletedBlockInfoProto) String() string { return proto.CompactTextString(m) }
func (*ReceivedDeletedBlockInfoProto) ProtoMessage()    {}

func (m *ReceivedDeletedBlockInfoProto) GetBlock() *hadoop_hdfs.BlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *ReceivedDeletedBlockInfoProto) GetStatus() ReceivedDeletedBlockInfoProto_BlockStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ReceivedDeletedBlockInfoProto_RECEIVING
}

func (m *ReceivedDeletedBlockInfoProto) GetDeleteHint() string {
	if m != nil && m.DeleteHint != nil {
		return *m.DeleteHint
	}
	return ""
}

// *
// List of blocks received and deleted for a storage.
type StorageReceivedDeletedBlocksProto struct {
	StorageUuid      *string                          `protobuf:"bytes,1,req,name=storageUuid" json:"storageUuid,omitempty"`
	Blocks           []*ReceivedDeletedBlockInfoProto `protobuf:"bytes,2,rep,name=blocks" json:"blocks,omitempty"`
	Storage          *DatanodeStorageProto            `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *StorageReceivedDeletedBlocksProto) Reset()         { *m = StorageReceivedDeletedBlocksProto{} }
func (m *StorageReceivedDeletedBlocksProto) String() string { return proto.CompactTextString(m) }
func (*StorageReceivedDeletedBlocksProto) ProtoMessage()    {}

func (m *StorageReceivedDeletedBlocksProto) GetStorageUuid() string {
	if m != nil && m.StorageUuid != nil {
		return *m.StorageUuid
	}
	return ""
}

func (m *StorageReceivedDeletedBlocksProto) GetBlocks() []*ReceivedDeletedBlockInfoProto {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *StorageReceivedDeletedBlocksProto) GetStorage() *DatanodeStorageProto {
	if m != nil {
		return m.Storage
	}
	return nil
}

// *
// registration - datanode registration information
// blockPoolID  - block pool ID of the reported blocks
// blocks       - Received/deleted block list
type BlockReceivedAndDeletedRequestProto struct {
	Registration     *DatanodeRegistrationProto           `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	BlockPoolId      *string                              `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Blocks           []*StorageReceivedDeletedBlocksProto `protobuf:"bytes,3,rep,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *BlockReceivedAndDeletedRequestProto) Reset()         { *m = BlockReceivedAndDeletedRequestProto{} }
func (m *BlockReceivedAndDeletedRequestProto) String() string { return proto.CompactTextString(m) }
func (*BlockReceivedAndDeletedRequestProto) ProtoMessage()    {}

func (m *BlockReceivedAndDeletedRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registration
	}
	return nil
}

func (m *BlockReceivedAndDeletedRequestProto) GetBlockPoolId() string {
	if m != nil && m.BlockPoolId != nil {
		return *m.BlockPoolId
	}
	return ""
}

func (m *BlockReceivedAndDeletedRequestProto) GetBlocks() []*StorageReceivedDeletedBlocksProto {
	if m != nil {
		return m.Blocks
	}
	return nil
}

// *
// void response
type BlockReceivedAndDeletedResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BlockReceivedAndDeletedResponseProto) Reset()         { *m = BlockReceivedAndDeletedResponseProto{} }
func (m *BlockReceivedAndDeletedResponseProto) String() string { return proto.CompactTextString(m) }
func (*BlockReceivedAndDeletedResponseProto) ProtoMessage()    {}

// *
// registartion - Datanode reporting the error
// errorCode - error code indicating the error
// msg - Free text description of the error
type ErrorReportRequestProto struct {
	Registartion     *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registartion" json:"registartion,omitempty"`
	ErrorCode        *uint32                    `protobuf:"varint,2,req,name=errorCode" json:"errorCode,omitempty"`
	Msg              *string                    `protobuf:"bytes,3,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *ErrorReportRequestProto) Reset()         { *m = ErrorReportRequestProto{} }
func (m *ErrorReportRequestProto) String() string { return proto.CompactTextString(m) }
func (*ErrorReportRequestProto) ProtoMessage()    {}

func (m *ErrorReportRequestProto) GetRegistartion() *DatanodeRegistrationProto {
	if m != nil {
		return m.Registartion
	}
	return nil
}

func (m *ErrorReportRequestProto) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *ErrorReportRequestProto) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

// *
// void response
type ErrorReportResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ErrorReportResponseProto) Reset()         { *m = ErrorReportResponseProto{} }
func (m *ErrorReportResponseProto) String() string { return proto.CompactTextString(m) }
func (*ErrorReportResponseProto) ProtoMessage()    {}

// *
// blocks - list of blocks that are reported as corrupt
type ReportBadBlocksRequestProto struct {
	Blocks           []*hadoop_hdfs.LocatedBlockProto `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *ReportBadBlocksRequestProto) Reset()         { *m = ReportBadBlocksRequestProto{} }
func (m *ReportBadBlocksRequestProto) String() string { return proto.CompactTextString(m) }
func (*ReportBadBlocksRequestProto) ProtoMessage()    {}

func (m *ReportBadBlocksRequestProto) GetBlocks() []*hadoop_hdfs.LocatedBlockProto {
	if m != nil {
		return m.Blocks
	}
	return nil
}

// *
// void response
type ReportBadBlocksResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReportBadBlocksResponseProto) Reset()         { *m = ReportBadBlocksResponseProto{} }
func (m *ReportBadBlocksResponseProto) String() string { return proto.CompactTextString(m) }
func (*ReportBadBlocksResponseProto) ProtoMessage()    {}

// *
// Commit block synchronization request during lease recovery
type CommitBlockSynchronizationRequestProto struct {
	Block             *hadoop_hdfs.ExtendedBlockProto `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	NewGenStamp       *uint64                         `protobuf:"varint,2,req,name=newGenStamp" json:"newGenStamp,omitempty"`
	NewLength         *uint64                         `protobuf:"varint,3,req,name=newLength" json:"newLength,omitempty"`
	CloseFile         *bool                           `protobuf:"varint,4,req,name=closeFile" json:"closeFile,omitempty"`
	DeleteBlock       *bool                           `protobuf:"varint,5,req,name=deleteBlock" json:"deleteBlock,omitempty"`
	NewTaragets       []*hadoop_hdfs.DatanodeIDProto  `protobuf:"bytes,6,rep,name=newTaragets" json:"newTaragets,omitempty"`
	NewTargetStorages []string                        `protobuf:"bytes,7,rep,name=newTargetStorages" json:"newTargetStorages,omitempty"`
	XXX_unrecognized  []byte                          `json:"-"`
}

func (m *CommitBlockSynchronizationRequestProto) Reset() {
	*m = CommitBlockSynchronizationRequestProto{}
}
func (m *CommitBlockSynchronizationRequestProto) String() string { return proto.CompactTextString(m) }
func (*CommitBlockSynchronizationRequestProto) ProtoMessage()    {}

func (m *CommitBlockSynchronizationRequestProto) GetBlock() *hadoop_hdfs.ExtendedBlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *CommitBlockSynchronizationRequestProto) GetNewGenStamp() uint64 {
	if m != nil && m.NewGenStamp != nil {
		return *m.NewGenStamp
	}
	return 0
}

func (m *CommitBlockSynchronizationRequestProto) GetNewLength() uint64 {
	if m != nil && m.NewLength != nil {
		return *m.NewLength
	}
	return 0
}

func (m *CommitBlockSynchronizationRequestProto) GetCloseFile() bool {
	if m != nil && m.CloseFile != nil {
		return *m.CloseFile
	}
	return false
}

func (m *CommitBlockSynchronizationRequestProto) GetDeleteBlock() bool {
	if m != nil && m.DeleteBlock != nil {
		return *m.DeleteBlock
	}
	return false
}

func (m *CommitBlockSynchronizationRequestProto) GetNewTaragets() []*hadoop_hdfs.DatanodeIDProto {
	if m != nil {
		return m.NewTaragets
	}
	return nil
}

func (m *CommitBlockSynchronizationRequestProto) GetNewTargetStorages() []string {
	if m != nil {
		return m.NewTargetStorages
	}
	return nil
}

// *
// void response
type CommitBlockSynchronizationResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CommitBlockSynchronizationResponseProto) Reset() {
	*m = CommitBlockSynchronizationResponseProto{}
}
func (m *CommitBlockSynchronizationResponseProto) String() string { return proto.CompactTextString(m) }
func (*CommitBlockSynchronizationResponseProto) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("hadoop.hdfs.datanode.DatanodeStorageProto_StorageState", DatanodeStorageProto_StorageState_name, DatanodeStorageProto_StorageState_value)
	proto.RegisterEnum("hadoop.hdfs.datanode.DatanodeCommandProto_Type", DatanodeCommandProto_Type_name, DatanodeCommandProto_Type_value)
	proto.RegisterEnum("hadoop.hdfs.datanode.BlockCommandProto_Action", BlockCommandProto_Action_name, BlockCommandProto_Action_value)
	proto.RegisterEnum("hadoop.hdfs.datanode.BlockIdCommandProto_Action", BlockIdCommandProto_Action_name, BlockIdCommandProto_Action_value)
	proto.RegisterEnum("hadoop.hdfs.datanode.NNHAStatusHeartbeatProto_State", NNHAStatusHeartbeatProto_State_name, NNHAStatusHeartbeatProto_State_value)
	proto.RegisterEnum("hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto_BlockStatus", ReceivedDeletedBlockInfoProto_BlockStatus_name, ReceivedDeletedBlockInfoProto_BlockStatus_value)
	proto.RegisterEnum("hadoop.hdfs.datanode.ErrorReportRequestProto_ErrorCode", ErrorReportRequestProto_ErrorCode_name, ErrorReportRequestProto_ErrorCode_value)
}
