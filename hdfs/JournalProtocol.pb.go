// Code generated by protoc-gen-go.
// source: JournalProtocol.proto
// DO NOT EDIT!

package hadoop_hdfs

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// *
// Journal information used by the journal receiver to identify a journal.
type JournalInfoProto struct {
	ClusterID        *string `protobuf:"bytes,1,req,name=clusterID" json:"clusterID,omitempty"`
	LayoutVersion    *uint32 `protobuf:"varint,2,opt,name=layoutVersion" json:"layoutVersion,omitempty"`
	NamespaceID      *uint32 `protobuf:"varint,3,opt,name=namespaceID" json:"namespaceID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *JournalInfoProto) Reset()         { *m = JournalInfoProto{} }
func (m *JournalInfoProto) String() string { return proto.CompactTextString(m) }
func (*JournalInfoProto) ProtoMessage()    {}

func (m *JournalInfoProto) GetClusterID() string {
	if m != nil && m.ClusterID != nil {
		return *m.ClusterID
	}
	return ""
}

func (m *JournalInfoProto) GetLayoutVersion() uint32 {
	if m != nil && m.LayoutVersion != nil {
		return *m.LayoutVersion
	}
	return 0
}

func (m *JournalInfoProto) GetNamespaceID() uint32 {
	if m != nil && m.NamespaceID != nil {
		return *m.NamespaceID
	}
	return 0
}

// *
// journalInfo - the information about the journal
// firstTxnId - the first txid in the journal records
// numTxns - Number of transactions in editlog
// records - bytes containing serialized journal records
// epoch - change to this represents change of journal writer
type JournalRequestProto struct {
	JournalInfo      *JournalInfoProto `protobuf:"bytes,1,req,name=journalInfo" json:"journalInfo,omitempty"`
	FirstTxnId       *uint64           `protobuf:"varint,2,req,name=firstTxnId" json:"firstTxnId,omitempty"`
	NumTxns          *uint32           `protobuf:"varint,3,req,name=numTxns" json:"numTxns,omitempty"`
	Records          []byte            `protobuf:"bytes,4,req,name=records" json:"records,omitempty"`
	Epoch            *uint64           `protobuf:"varint,5,req,name=epoch" json:"epoch,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *JournalRequestProto) Reset()         { *m = JournalRequestProto{} }
func (m *JournalRequestProto) String() string { return proto.CompactTextString(m) }
func (*JournalRequestProto) ProtoMessage()    {}

func (m *JournalRequestProto) GetJournalInfo() *JournalInfoProto {
	if m != nil {
		return m.JournalInfo
	}
	return nil
}

func (m *JournalRequestProto) GetFirstTxnId() uint64 {
	if m != nil && m.FirstTxnId != nil {
		return *m.FirstTxnId
	}
	return 0
}

func (m *JournalRequestProto) GetNumTxns() uint32 {
	if m != nil && m.NumTxns != nil {
		return *m.NumTxns
	}
	return 0
}

func (m *JournalRequestProto) GetRecords() []byte {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *JournalRequestProto) GetEpoch() uint64 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

// *
// void response
type JournalResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *JournalResponseProto) Reset()         { *m = JournalResponseProto{} }
func (m *JournalResponseProto) String() string { return proto.CompactTextString(m) }
func (*JournalResponseProto) ProtoMessage()    {}

// *
// journalInfo - the information about the journal
// txid - first txid in the new log
type StartLogSegmentRequestProto struct {
	JournalInfo      *JournalInfoProto `protobuf:"bytes,1,req,name=journalInfo" json:"journalInfo,omitempty"`
	Txid             *uint64           `protobuf:"varint,2,req,name=txid" json:"txid,omitempty"`
	Epoch            *uint64           `protobuf:"varint,3,req,name=epoch" json:"epoch,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *StartLogSegmentRequestProto) Reset()         { *m = StartLogSegmentRequestProto{} }
func (m *StartLogSegmentRequestProto) String() string { return proto.CompactTextString(m) }
func (*StartLogSegmentRequestProto) ProtoMessage()    {}

func (m *StartLogSegmentRequestProto) GetJournalInfo() *JournalInfoProto {
	if m != nil {
		return m.JournalInfo
	}
	return nil
}

func (m *StartLogSegmentRequestProto) GetTxid() uint64 {
	if m != nil && m.Txid != nil {
		return *m.Txid
	}
	return 0
}

func (m *StartLogSegmentRequestProto) GetEpoch() uint64 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

// *
// void response
type StartLogSegmentResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StartLogSegmentResponseProto) Reset()         { *m = StartLogSegmentResponseProto{} }
func (m *StartLogSegmentResponseProto) String() string { return proto.CompactTextString(m) }
func (*StartLogSegmentResponseProto) ProtoMessage()    {}

// *
// journalInfo - the information about the journal
// txid - first txid in the new log
type FenceRequestProto struct {
	JournalInfo      *JournalInfoProto `protobuf:"bytes,1,req,name=journalInfo" json:"journalInfo,omitempty"`
	Epoch            *uint64           `protobuf:"varint,2,req,name=epoch" json:"epoch,omitempty"`
	FencerInfo       *string           `protobuf:"bytes,3,opt,name=fencerInfo" json:"fencerInfo,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *FenceRequestProto) Reset()         { *m = FenceRequestProto{} }
func (m *FenceRequestProto) String() string { return proto.CompactTextString(m) }
func (*FenceRequestProto) ProtoMessage()    {}

func (m *FenceRequestProto) GetJournalInfo() *JournalInfoProto {
	if m != nil {
		return m.JournalInfo
	}
	return nil
}

func (m *FenceRequestProto) GetEpoch() uint64 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

func (m *FenceRequestProto) GetFencerInfo() string {
	if m != nil && m.FencerInfo != nil {
		return *m.FencerInfo
	}
	return ""
}

// *
// previousEpoch - previous epoch if any or zero
// lastTransactionId - last valid transaction Id in the journal
// inSync - if all journal segments are available and in sync
type FenceResponseProto struct {
	PreviousEpoch     *uint64 `protobuf:"varint,1,opt,name=previousEpoch" json:"previousEpoch,omitempty"`
	LastTransactionId *uint64 `protobuf:"varint,2,opt,name=lastTransactionId" json:"lastTransactionId,omitempty"`
	InSync            *bool   `protobuf:"varint,3,opt,name=inSync" json:"inSync,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *FenceResponseProto) Reset()         { *m = FenceResponseProto{} }
func (m *FenceResponseProto) String() string { return proto.CompactTextString(m) }
func (*FenceResponseProto) ProtoMessage()    {}

func (m *FenceResponseProto) GetPreviousEpoch() uint64 {
	if m != nil && m.PreviousEpoch != nil {
		return *m.PreviousEpoch
	}
	return 0
}

func (m *FenceResponseProto) GetLastTransactionId() uint64 {
	if m != nil && m.LastTransactionId != nil {
		return *m.LastTransactionId
	}
	return 0
}

func (m *FenceResponseProto) GetInSync() bool {
	if m != nil && m.InSync != nil {
		return *m.InSync
	}
	return false
}

func init() {
}
